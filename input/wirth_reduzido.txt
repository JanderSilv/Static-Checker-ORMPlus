program = "begin" (("float" | "int" | "string" | "void" | "bool" | "char") ["[" "]"] ("Identifier" | "Identifier" "[" "Integer-Number" "]") {"," ("Identifier" | "Identifier" "[" "Integer-Number" "]")} ";" | (("float" | "int" | "string" | "void" | "bool" | "char") "Function" "(" [param-list] ")" statement)) {";" (("float" | "int" | "string" | "void" | "bool" | "char") ["[" "]"] ("Identifier" | "Identifier" "[" "Integer-Number" "]") {"," ("Identifier" | "Identifier" "[" "Integer-Number" "]")} ";" | (("float" | "int" | "string" | "void" | "bool" | "char") "Function" "(" [param-list] ")" statement))} "end".

param-list = ("float" | "int" | "string" | "void" | "bool" | "char") ("Identifier" | "Identifier" "[" "Integer-Number" "]") {"," ("Identifier" | "Identifier" "[" "Integer-Number" "]")} {";" ("float" | "int" | "string" | "void" | "bool" | "char") ("Identifier" | "Identifier" "[" "Integer-Number" "]") {"," ("Identifier" | "Identifier" "[" "Integer-Number" "]")}}.

statement = ([expression] ";") | ("{" {("float" | "int" | "string" | "void" | "bool" | "char") ["[" "]"] ("Identifier" | "Identifier" "[" "Integer-Number" "]") {"," ("Identifier" | "Identifier" "[" "Integer-Number" "]")} ";"} {statement} "}") | ("if" "(" expression ")" statement ["else" statement]) |  ("while" "(" expression ")" statement) | ("return" [expression] ";") | ("break" ";").

expression = {("Identifier" | "Identifier" "[" "Integer-Number" "]") "="} {"!"} {"-"} factor {("*" | "/") {"-"} factor} {("+" | "-") {"-"} factor {("*" | "/") {"-"} factor} } [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") {"-"} factor {("*" | "/") {"-"} factor} {("+" | "-") {"-"} factor {("*" | "/") {"-"} factor} }] {"&" {"!"} {"-"} factor {("*" | "/") {"-"} factor} {("+" | "-") {"-"} factor {("*" | "/") {"-"} factor} } [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") {"-"} factor {("*" | "/") {"-"} factor} {("+" | "-") {"-"} factor {("*" | "/") {"-"} factor} }]} {"|" {"!"} {"-"} factor {("*" | "/") {"-"} factor} {("+" | "-") {"-"} factor {("*" | "/") {"-"} factor} } [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") {"-"} factor {("*" | "/") {"-"} factor} {("+" | "-") {"-"} factor {("*" | "/") {"-"} factor} }] {"&" {"!"} {"-"} factor {("*" | "/") {"-"} factor} {("+" | "-") {"-"} factor {("*" | "/") {"-"} factor} } [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") {"-"} factor {("*" | "/") {"-"} factor} {("+" | "-") {"-"} factor {("*" | "/") {"-"} factor} }]}}.

factor = "(" expression ")" | ("Identifier" | "Identifier" "[" "Integer-Number" "]") | ("Function" "(" [arg-list] ")") | "Integer-number" | "Float-number" | "Constant-String" | "Character" | "true" | "false".

arg-list = factor {"," expression}.